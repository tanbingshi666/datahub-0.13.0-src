name: metadata-io
on:
  push:
    branches:
      - master
    paths:
      - "**/*.gradle"
      - "li-utils/**"
      - "metadata-models/**"
      - "metadata-io/**"
  pull_request:
    branches:
      - "**"
    paths:
      - "**/*.gradle"
      - "li-utils/**"
      - "metadata-models/**"
      - "metadata-io/**"
  release:
    types: [published]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      frontend_change: ${{ steps.ci-optimize.outputs.frontend-change == 'true' }}
      ingestion_change: ${{ steps.ci-optimize.outputs.ingestion-change == 'true' }}
      backend_change: ${{ steps.ci-optimize.outputs.backend-change == 'true' }}
      docker_change: ${{ steps.ci-optimize.outputs.docker-change == 'true' }}
      frontend_only: ${{ steps.ci-optimize.outputs.frontend-only == 'true' }}
      ingestion_only: ${{ steps.ci-optimize.outputs.ingestion-only == 'true' }}
      kafka_setup_change: ${{ steps.ci-optimize.outputs.kafka-setup-change == 'true' }}
      mysql_setup_change: ${{ steps.ci-optimize.outputs.mysql-setup-change == 'true' }}
      postgres_setup_change: ${{ steps.ci-optimize.outputs.postgres-setup-change == 'true' }}
      elasticsearch_setup_change: ${{ steps.ci-optimize.outputs.elasticsearch-setup-change == 'true' }}
    steps:
      - name: Check out the repo
        uses: acryldata/sane-checkout-action@v3
      - uses: ./.github/actions/ci-optimization
        id: ci-optimize
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    needs: setup
    steps:
      - uses: acryldata/sane-checkout-action@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: "zulu"
          java-version: 17
      - uses: gradle/gradle-build-action@v2
      - uses: actions/setup-python@v4
        if: ${{ needs.setup.outputs.ingestion_change == 'true' }}
        with:
          python-version: "3.10"
          cache: "pip"
      - name: Gradle build (and test)
        run: |
          ./gradlew :metadata-io:test
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: Test Results (metadata-io)
          path: |
            **/build/reports/tests/test/**
            **/build/test-results/test/**
            **/junit.*.xml
            !**/binary/**
      - name: Ensure codegen is updated
        uses: ./.github/actions/ensure-codegen-updated

  event-file:
    runs-on: ubuntu-latest
    steps:
      - name: Upload
        uses: actions/upload-artifact@v3
        with:
          name: Event File
          path: ${{ github.event_path }}
